// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestApiLK.data;

#nullable disable

namespace RestApiLK.Migrations
{
    [DbContext(typeof(LakridsKompanigetDbContext))]
    [Migration("20240610220858_AddImageUrlToProdukter")]
    partial class AddImageUrlToProdukter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RestApiLK.data.Betaling", b =>
                {
                    b.Property<int>("BetalingsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Betalingsdato")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Betalingsmetode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Betalingsstatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrdreID")
                        .HasColumnType("int");

                    b.HasKey("BetalingsID");

                    b.HasIndex("OrdreID");

                    b.ToTable("Betalinger");
                });

            modelBuilder.Entity("RestApiLK.data.Forhandler", b =>
                {
                    b.Property<int>("ForhandlerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostnummerBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Åbningstider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ForhandlerID");

                    b.ToTable("Forhandlere");
                });

            modelBuilder.Entity("RestApiLK.data.Kunder", b =>
                {
                    b.Property<int>("KundeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Efternavn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostnummerBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("KundeID");

                    b.ToTable("Kunder");
                });

            modelBuilder.Entity("RestApiLK.data.Ordre", b =>
                {
                    b.Property<int>("OrdreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<int>("KundeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ordredato")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ordrestatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProduktID")
                        .HasColumnType("int");

                    b.HasKey("OrdreID");

                    b.HasIndex("KundeID");

                    b.HasIndex("ProduktID");

                    b.ToTable("Ordre");
                });

            modelBuilder.Entity("RestApiLK.data.produkter", b =>
                {
                    b.Property<int>("ProduktID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AntalPåLager")
                        .HasColumnType("int");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Indhold")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ProduktID");

                    b.ToTable("Produkter");
                });

            modelBuilder.Entity("RestApiLK.data.Betaling", b =>
                {
                    b.HasOne("RestApiLK.data.Ordre", "Ordre")
                        .WithMany()
                        .HasForeignKey("OrdreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordre");
                });

            modelBuilder.Entity("RestApiLK.data.Ordre", b =>
                {
                    b.HasOne("RestApiLK.data.Kunder", "Kunde")
                        .WithMany()
                        .HasForeignKey("KundeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestApiLK.data.produkter", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");

                    b.Navigation("Produkt");
                });
#pragma warning restore 612, 618
        }
    }
}
